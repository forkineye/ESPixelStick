
[platformio]
default_envs = espsv3, d1_mini, d1_mini_pro, d32_pro, d32_pro_eth, esp32_cam, esp32_devkitc
src_dir = ./ESPixelStick
data_dir = ./ESPixelStick/data
build_cache_dir = ./.pio/.buildcache
packages_dir = ./.pio/packages
cache_dir = ./.pio/cache
extra_configs = platformio_user.ini

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; Baseline build environment                                         ;
; https://docs.platformio.org/en/latest/projectconf/section_env.html ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[env]
framework = arduino
monitor_speed = 115200  
upload_speed = 921600
lib_compat_mode = strict
lib_deps =
    adafruit/Adafruit PWM Servo Driver Library @ 2.4.0
    bblanchon/ArduinoJson @ 6.18.5
    bblanchon/StreamUtils @ 1.6.2
    djgrrr/Int64String @ 1.1.1
    https://github.com/esphome/ESPAsyncWebServer#4fd0a1fdf421664214a27373c0eb0247f94b7a79
    forkineye/ESPAsyncE131 @ 1.0.4
    ottowinter/AsyncMqttClient-esphome @ 0.8.6
    https://github.com/natcl/Artnet                         ; pull latest
    https://github.com/MartinMueller2003/Espalexa           ; pull latest
    https://github.com/PaulStoffregen/Time
    adafruit/Adafruit SSD1306 @ ^2.5.9
extra_scripts =
    pre:.scripts/pio-version.py
    .scripts/download_fs.py
    post:.scripts/CopyTargets.py
; build_type = debug
; upload_port = com6

lib_ignore =
	ESP Async WebServer	; force the use of the esphome version
	AsyncTCP			; force the use of the esphome version
	LittleFS_esp32		; force the use of the ESP32 built into the core version

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; ESP8266 defaults for 4MB flash                                     ;
; https://docs.platformio.org/en/latest/platforms/espressif8266.html ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[esp8266]
platform = espressif8266 @ 4.0.1 ; Arduino Core v3.0.2
board_build.f_cpu = 160000000L
board_build.filesystem = littlefs
board_build.ldscript = eagle.flash.4m2m.ld
monitor_filters = esp8266_exception_decoder
build_flags =
    ${env.build_flags}
;    -D PIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190313
;    -D PIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3
;    -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
    -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
    -D NDEBUG        ; https://github.com/esp8266/Arduino/issues/3978
    -D FP_IN_IROM    ; https://github.com/esp8266/Arduino/pull/7180
    -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48
;    -D VTABLES_IN_IRAM
    -D VTABLES_IN_FLASH
    -Wl,-Map=firmware.map
    -Wl,--cref
;    -DDEBUG_ESP_PORT=Serial
;    -DDEBUG_ESP_OOM

lib_ignore =
    Ethernet ; Remove once Art-Net is fixed / replaced to not depend on Ethernet in lib config
lib_deps =
    ${env.lib_deps}
    me-no-dev/ESPAsyncUDP @ 0.0.0-alpha+sha.697c75a025
    ottowinter/ESPAsyncTCP-esphome @ 1.2.3

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; ESP32 defaults for 4MB flash                                     ;
; https://docs.platformio.org/en/latest/platforms/espressif32.html ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[esp32]
board_build.filesystem = littlefs
board_build.partitions = ESP32_partitions.csv
monitor_filters = esp32_exception_decoder
; monitor_filters = esp32_exception_decoder, time
build_flags =
    ${env.build_flags}
    -Wl,-Map=firmware.map
    -Wl,--cref
lib_deps =
    ${env.lib_deps}
    esphome/AsyncTCP-esphome @ 2.0.0
    https://github.com/blazoncek/OneWire.git
    https://github.com/matmunk/DS18B20
extra_scripts = ${env.extra_scripts}
    .scripts/replace_fs.py

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; ESP32 pulling from upstream core ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
[esp32git]
extends = esp32
build_flags = ${esp32.build_flags} -mtext-section-literals

platform  = https://github.com/platformio/platform-espressif32.git#8100ac5 ; works 6.3.1
platform_packages =

    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.3 ;

board_build.arduino.upstream_packages = no

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
; Build targets (environments) ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;

; ESPixelStick V3
[env:espsv3]
extends = esp8266
board = d1_mini
build_flags =
    ${esp8266.build_flags}
    -D BOARD_NAME='"espsv3"'
    -D BOARD_ESPS_V3

; Generic Wemos D1 R2 Mini
[env:d1_mini]
extends = esp8266
board = d1_mini
build_flags =
    ${esp8266.build_flags}
    -D BOARD_NAME='"d1_mini"'

[env:d1_mini_pro]
extends = esp8266
board = d1_mini_pro
build_flags =
    ${esp8266.build_flags}
    -D BOARD_NAME='"d1_mini_pro"'

; Generic Wemos D1 R2 Mini
[env:esp01s]
extends = esp8266
board = d1_mini
build_flags =
    ${esp8266.build_flags}
    -D BOARD_NAME='"esp01s"'
    -D BOARD_ESP01S

; Lolin D32 Pro
[env:d32_pro]
extends = esp32git
board = lolin_d32_pro
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"d32_pro"'
    -D BOARD_ESP32_LOLIN_D32_PRO
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw
;    -D CONFIG_ESP_SYSTEM_PANIC_GDBSTUB -O0 -ggdb3 -g3
; debug_tool              = esp-prog
; upload_protocol         = esp-prog
; debug_init_break        = tbreak setup

; Lolin D32 Pro with Ethernet
[env:d32_pro_eth]
extends = esp32git
board = lolin_d32_pro
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"d32_pro_eth"'
    -D BOARD_ESP32_LOLIN_D32_PRO_ETH
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

; ESP32 CAM
[env:esp32_cam]
extends = esp32git
board = esp32cam
monitor_rts = 0
monitor_dtr = 0
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_cam"'
    -D BOARD_ESP32_CAM
    -fexceptions
build_unflags = 
    -fno-exceptions
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

; ESP32 TTGO-T8 V1.x
[env:esp32_ttgo_t8]
extends = esp32git
board = ttgo-t7-v14-mini32 ; use until platformio adds TTGO-T8
monitor_rts = 0
monitor_dtr = 0
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_ttgo_t8"'
    -D BOARD_ESP32_TTGO_T8
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

; Generic Wemos D1 Mini 32
[env:d1_mini32]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"d1_mini32"'
    -D BOARD_ESP32_D1_MINI
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

; Generic Wemos D1 Mini 32
[env:d1_mini32_eth]
extends = esp32git
board = esp32doit-devkit-v1
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"d1_mini32_eth"'
    -D BOARD_ESP32_D1_MINI_ETH
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

; WT 32 ETH 01
[env:esp32_wt32eth01]
extends = esp32git
board = esp32dev
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_wt32eth01"'
    -D BOARD_ESP32_WT32ETH01
    -I ./.pio/packages/framework-arduinoespressif32/libraries/Ethernet/src
;    -D BOARD_HAS_PSRAM
;    -mfix-esp32-psram-cache-issue
;    -mfix-esp32-psram-cache-strategy=memw

[env:esp32_quinled_dig_octa]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_quinled_dig_octa"'
    -D BOARD_ESP32_QUINLED_DIG_OCTA
build_unflags =
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:esp32_quinled_quad]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_quinled_quad"'
    -D BOARD_ESP32_QUINLED_QUAD
build_unflags =
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:esp32_quinled_quad_ae_plus]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_quinled_quad_ae_plus"'
    -D BOARD_ESP32_QUINLED_QUAD_AE_PLUS
build_unflags =
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:esp32_quinled_quad_ae_plus_8]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_quinled_quad_ae_plus_8"'
    -D BOARD_ESP32_QUINLED_QUAD_AE_PLUS_8
build_unflags =
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:esp32_quinled_quad_eth]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_quinled_quad_eth"'
    -D BOARD_ESP32_QUINLED_QUAD_ETH
build_unflags =
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:esp32_quinled_uno]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_quinled_uno"'
    -D BOARD_ESP32_QUINLED_UNO
build_unflags =
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:esp32_quinled_uno_ae_plus]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_quinled_uno_ae_plus"'
    -D BOARD_ESP32_QUINLED_UNO_AE_PLUS
build_unflags =
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:esp32_quinled_uno_eth]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_quinled_uno_eth"'
    -D BOARD_ESP32_QUINLED_UNO_ETH
build_unflags =
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:esp32_quinled_uno_eth_espsv3]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_quinled_uno_eth_espsv3"'
    -D BOARD_ESP32_QUINLED_UNO_ETH_ESPSV3
build_unflags =
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:esp32_quinled_uno_espsv3]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_quinled_uno_espsv3"'
    -D BOARD_ESP32_QUINLED_UNO_ESPSV3
build_unflags =
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -mfix-esp32-psram-cache-strategy=memw

[env:d1_mini_mhetesp32minikit]
extends = esp32git
board = mhetesp32minikit
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"d1_mini_mhetesp32minikit"'
    -D BOARD_ESP32_QUINLED_UNO_ETH

; Olimex ESP32 Gateway
[env:olimex_esp32_gw]
extends = esp32git
board = esp32-gateway
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"olimex_esp32_gw"'
    -D BOARD_ESP32_OLIMEX_GATEWAY

[env:d1_mini_twilightlord]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"d1_mini_twilightlord"'
    -D BOARD_ESP32_TWILIGHTLORD

[env:d1_mini_twilightlord_eth]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"d1_mini_twilightlord_eth"'
    -D BOARD_ESP32_TWILIGHTLORD_ETH

[env:esp32_devkitc]
extends = esp32git
board = esp32dev
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_devkitc"'
    -D BOARD_ESP32_DEVKITC

;M5Stack Atom Lite/Matrix
[env:m5stack_atom]
extends = esp32git
board = m5stack-atom
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"m5stack_atom"'
    -D BOARD_ESP32_M5STACK_ATOM

;Quatro from CanadaPixelsCoro.ca
[env:esp3deuxquatro_dmx]
extends = esp32git
board = wemos_d1_mini32
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp3deuxquatro_dmx"'
    -D BOARD_ESPS_ESP3DEUXQUATRO_DMX

;Quatro from CanadaPixelsCoro.ca
[env:esp32_wasatch]
extends = esp32git
board = esp32dev
build_flags =
    ${esp32git.build_flags}
    -D BOARD_NAME='"esp32_wasatch"'
    -D BOARD_ESP32_WT32ETH01_WASATCH
    -I ./.pio/packages/framework-arduinoespressif32/libraries/Ethernet/src
;    -D BOARD_HAS_PSRAM
;    -mfix-esp32-psram-cache-issue
;    -mfix-esp32-psram-cache-strategy=memw
